# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      pkgPath:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Url of the package'
        # Default value if no value is explicitly provided
        default: 'https://'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

  repository_dispatch:
    types: [pkgadd, pkgrem]

    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  createDirs:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: echo "Hello ${{ inputs.pkgPath }}"

    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Create Directory and Fetch File manual
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        $pkgPath = ./00-generate-pkg-dir.ps1 -url ${{ inputs.pkgPath }}
        curl -o $pkgPath "${{ inputs.pkgPath }}"
      
    - name: Create Directory and Fetch File request
      if: ${{ github.event_name == 'repository_dispatch' && github.event.action == 'pkgadd' }}
      run: |
        $urlArray = "${{ github.event.client_payload.pkgPaths }}".Split(",")
        foreach ($pkgPath in $urlArray) {
          $url=("https://winget.azureedge.net/cache/manifests/"+"$pkgPath")
          $response=$(curl -s -o /dev/null -w "%{http_code}" "$url")

          if ("$response" -eq 200){
            $pkgPath = ./00-generate-pkg-dir.ps1 -url "$url"
            curl -o "$pkgPath" "$url"
            echo "File fetched successfully."}
          else {
            echo "URL does not exist or could not be accessed. Skipping file fetch."
          }
        }

    - name: Create Directory and Fetch File request
      if: ${{ github.event_name == 'repository_dispatch' && github.event.action == 'pkgrem' }}
      run: |
        $urlArray = "${{ github.event.client_payload.pkgPaths }}".Split(",")
        foreach ($pkgPath in $urlArray) {
          $url="$pkgPath"
          ./00-remove-pkg.ps1 -url "$url"
          echo "File removed successfully."
        }

    - name: Set git config
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: commit-changes
      run: |
        git add packages/
        git commit -m "new package change"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: "main"

    - name: run build workflow
      run: gh workflow run release.yml
      env:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: "main"
